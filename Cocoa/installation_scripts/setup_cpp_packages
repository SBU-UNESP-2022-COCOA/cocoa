if [ -z "${ROOTDIR}" ]; then
    echo 'ERROR ROOTDIR not defined'
    return 1
fi
if [ -z "${CXX_COMPILER}" ]; then
    echo 'ERROR CXX_COMPILER not defined'
    return 1
fi
if [ -z "${C_COMPILER}" ]; then
    echo 'ERROR C_COMPILER not defined'
    return 1
fi
if [ -z "${FORTRAN_COMPILER}" ]; then
    echo 'ERROR C_COMPILER not defined'
    return 1
fi
if [ -z "${CMAKE}" ]; then
    echo 'ERROR CMAKE not defined'
    return 1
fi
if [ -z "${MAKE_NUM_THREADS}" ]; then
    echo 'ERROR MAKE_NUM_THREADS not defined'
    return 1
fi
# ----------------------------------------------------------------------------
# ----------------------------------------------------------------------------
# ------------------------------- C++ PACKAGES -------------------------------
# ----------------------------------------------------------------------------
# ----------------------------------------------------------------------------

if [ -z "${IGNORE_CPP_SPDLOG_INSTALLATION}" ]; then
    echo 'INSTALLING CPP SPDLOG - THAT MIGHT TAKE A WHILE'

    cd $ROOTDIR/../cocoa_installation_libraries/spdlog

    rm -f CMakeCache.txt

    $CMAKE -DCMAKE_INSTALL_PREFIX=$ROOTDIR/.local -DCMAKE_C_COMPILER=$C_COMPILER -DCMAKE_CXX_COMPILER=$CXX_COMPILER --log-level=ERROR . > /dev/null 2> /dev/null
    if [ $? -eq 0 ] 
    then
      echo "CMAKE SPDLOG OK"
    else
      echo "SPDLOG COULD NOT CMAKE" >&2
      return 1
    fi

    make -j $MAKE_NUM_THREADS > /dev/null 2> /dev/null
    if [ $? -eq 0 ] 
    then
      echo "MAKE SPDLOG OK"
    else
      echo "SPDLOG COULD NOT MAKE" >&2
      return 1
    fi

    make install > /dev/null
    if [ $? -eq 0 ] 
    then
      echo "MAKE INSTALL SPDLOG OK"
    else
      echo "SPDLOG COULD NOT MAKE INSTALL" >&2
      return 1
    fi

    cd $ROOTDIR
fi
if [ -z "${IGNORE_CPP_ARMA_INSTALLATION}" ]; then
    echo 'INSTALLING CPP ARMADILLO - THAT MIGHT TAKE A WHILE'

    cd $ROOTDIR/../cocoa_installation_libraries/armadillo-10.6.2

    rm -f CMakeCache.txt

    $CMAKE -DBUILD_SHARED_LIBS=TRUE -DCMAKE_INSTALL_PREFIX=$ROOTDIR/.local \
    -DCMAKE_C_COMPILER=$C_COMPILER -DCMAKE_CXX_COMPILER=$CXX_COMPILER \
    -DLAPACK_FOUND=YES -DLAPACK_LIBRARIES=$ROOTDIR/.local/lib/liblapack.so \
    -DBLAS_FOUND=NO --log-level=ERROR . > /dev/null 2> /dev/null
    if [ $? -eq 0 ] 
    then
      echo "CMAKE ARMA OK"
    else
      echo "ARMA COULD NOT CMAKE" >&2
      return 1
    fi
    make clean
    make -j $MAKE_NUM_THREADS all -Wno-dev > /dev/null 2> /dev/null
    if [ $? -eq 0 ] 
    then
      echo "MAKE ARMA OK"
    else
      echo "ARMA COULD NOT MAKE" >&2
      return 1
    fi

    make install > /dev/null
    if [ $? -eq 0 ] 
    then
      echo "MAKE INSTALL ARMA OK"
    else
      echo "ARMA COULD NOT MAKE INSTALL" >&2
      return 1
    fi

    cd $ROOTDIR
fi
if [ -z "${IGNORE_CPP_CARMA_INSTALLATION}" ]; then
    echo 'INSTALLING CARMA -  THE PYTHON <-> ARMADILLO CONVERSION - THAT MIGHT TAKE A WHILE'

    cd $ROOTDIR/../cocoa_installation_libraries/carma

    rm -rf $ROOTDIR/.local/include/carma/
    
    mkdir $ROOTDIR/.local/include/carma/ 

    cp ./carma.h $ROOTDIR/.local/include/

    cp -r ./carma_bits $ROOTDIR/.local/include/

    cd $ROOTDIR
fi
if [ -z "${IGNORE_CPP_BOOST_INSTALLATION}" ]; then
    echo 'INSTALLING CPP BOOST - THAT WILL TAKE A WHILE'

    cd $ROOTDIR/../cocoa_installation_libraries/boost_1_72_0/

    ./bootstrap.sh --prefix=$ROOTDIR/.local > /dev/null 2> /dev/null
    if [ $? -eq 0 ] 
    then
      echo "bootstrap BOOST OK"
    else
      echo "BOOST COULD NOT bootstrap" >&2
      return 1
    fi

    ./b2 --with=regex install --without-python --without-thread --without-timer --without-mpi --without-atomic > /dev/null 2> /dev/null
    if [ $? -eq 0 ] 
    then
      echo "B2 BOOST OK"
    else
      echo "BOOST COULD NOT B2" >&2
      return 1
    fi
    
    cd $ROOTDIR
fi